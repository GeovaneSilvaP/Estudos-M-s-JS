//ESCOPO

//escopo global
var x = 5;

let y = 10;

console.log(x, y);


//escopo local
function teste(){
    const z = 7;

    console.log(z);

    //√© possivel ascesar o valor dos escopos global em fun√ß√µes

    console.log(x, y);
    
    
}

teste();

//n√£o √© possivel ascesar o valor do escopo local fora de uma fun√ß√£o
//exempo: console.log(z);

//Exerc√≠cio de ESCOPO

//üß© Exerc√≠cio 1 ‚Äî Escopo Global

let contador = 0;

function incrementar(){
    contador++
    console.log("Incrementando... contador agora √©:", contador);
}

console.log(contador);
incrementar();
incrementar();

//üß© Exerc√≠cio 2 ‚Äî Escopo Local (Fun√ß√£o)

function teste2() {
    let mensagem  = "Ol√°, escopo local!"
    console.log(mensagem );
}

teste2();
//console.log(mensagem );

//üß© Exerc√≠cio 3 ‚Äî Escopo de Bloco

if (true) {
    var nome1 = "Var";
    let nome2 = "Let";
    const nome3 = "Const";
}

console.log(nome1);
//console.log(nome2);
//console.log(nome3);

//üß© Exerc√≠cio 4 ‚Äî Escopo e Loop

// for (let i = 0; i < 3; i++) {
//     console.log("Dentro do loop:", i);
    
// }

// console.log("Fora do loop com var:", i);

// for (let j = 0; j < 3; j++) {
//     console.log("Dentro do loop:", j);
    
// }

// console.log("Fora do loop com let:", j);

//üß© Exerc√≠cio 5 ‚Äî Escopo Aninhado

function extrerna() {
    const nome = "Fun√ß√£o Externa";

    function interna() {
        const saudacao = "Fun√ß√£o Interna";
        console.log(nome);
        console.log(saudacao);
    }

    interna();

}

extrerna();

//üß© Exerc√≠cio 6 ‚Äî Diferen√ßa entre let e var

function testeEscopo(){
    if (true) {
        var a = 10;
        let b = 20;
    }
}

//console.log(a);
//console.log(b);

testeEscopo();